# üìö INCEPTION - GUIDE DE PR√âPARATION POUR L'√âVALUATION

## üéØ CONNAISSANCES TH√âORIQUES √Ä MA√éTRISER

### 1. üê≥ Docker Fundamentals
**Questions attendues :**
- **"Comment fonctionne Docker ?"**
  ‚Üí Expliquer la containerisation, la diff√©rence avec les VMs
  ‚Üí Parler des namespaces, cgroups, et layered filesystem

- **"Diff√©rence entre image et container ?"**
  ‚Üí Image = mod√®le/template statique
  ‚Üí Container = instance en cours d'ex√©cution d'une image

- **"Avantages de Docker vs VMs ?"**
  ‚Üí Plus l√©ger (partage le kernel)
  ‚Üí D√©marrage plus rapide
  ‚Üí Meilleure utilisation des ressources
  ‚Üí Portabilit√© et reproductibilit√©

### 2. üîß Docker Compose
**Questions attendues :**
- **"Qu'est-ce que Docker Compose ?"**
  ‚Üí Outil d'orchestration pour multi-containers
  ‚Üí D√©finition des services dans docker-compose.yml
  ‚Üí Gestion des d√©pendances entre services

- **"Diff√©rence entre docker run et docker-compose ?"**
  ‚Üí docker run = conteneur unique
  ‚Üí docker-compose = orchestration de plusieurs services
  ‚Üí Gestion automatique des r√©seaux et volumes

### 3. üèóÔ∏è Architecture du Projet
**Expliquer la structure :**
```
inception/
‚îú‚îÄ‚îÄ Makefile                    # Automatisation des t√¢ches
‚îú‚îÄ‚îÄ srcs/
‚îÇ   ‚îú‚îÄ‚îÄ docker-compose.yml     # Orchestration des services
‚îÇ   ‚îú‚îÄ‚îÄ .env                   # Variables d'environnement
‚îÇ   ‚îî‚îÄ‚îÄ requirements/
‚îÇ       ‚îú‚îÄ‚îÄ nginx/             # Reverse proxy + SSL
‚îÇ       ‚îú‚îÄ‚îÄ wordpress/         # Application web + PHP-FPM
‚îÇ       ‚îî‚îÄ‚îÄ mariadb/           # Base de donn√©es
```

---

## üîç CHECKLIST TECHNIQUE PRE-√âVALUATION

### ‚úÖ Tests Obligatoires Avant √âvaluation

#### 1. Nettoyage Complet de l'Environnement
```bash
# Commande exacte de l'√©valuation :
docker stop $(docker ps -qa); docker rm $(docker ps -qa); docker rmi -f $(docker images -qa); docker volume rm $(docker volume ls -q); docker network rm $(docker network ls -q) 2>/dev/null
```

#### 2. Construction et D√©marrage
```bash
make
# Doit fonctionner en une seule commande !
```

#### 3. V√©rifications Post-D√©marrage
```bash
# Containers actifs :
docker ps
# Doit montrer : nginx, wordpress, mariadb

# Volumes cr√©√©s :
docker volume ls
# Doit montrer : srcs_wordpress_data, srcs_mariadb_data

# R√©seau cr√©√© :
docker network ls
# Doit montrer : srcs_inception

# Acc√®s HTTPS uniquement :
curl http://localhost:80        # DOIT √âCHOUER
curl -k https://localhost:443   # DOIT FONCTIONNER
```

### ‚úÖ Points de Contr√¥le Dockerfile

#### NGINX (srcs/requirements/nginx/Dockerfile)
- [x] FROM debian:bookworm ‚úì
- [x] Pas de commandes interdites (tail -f, sleep infinity) ‚úì
- [x] CMD nginx -g "daemon off;" ‚úì
- [x] Configuration SSL/TLS custom ‚úì

#### WordPress (srcs/requirements/wordpress/Dockerfile)
- [x] FROM debian:bookworm ‚úì
- [x] PHP-FPM install√© ‚úì
- [x] Pas de nginx dans ce container ‚úì
- [x] ENTRYPOINT sur script custom ‚úì
- [x] WP-CLI install√© ‚úì

#### MariaDB (srcs/requirements/mariadb/Dockerfile)
- [x] FROM debian:bookworm ‚úì
- [x] Script d'initialisation custom ‚úì
- [x] Pas de commandes interdites ‚úì

---

## üìã D√âMONSTRATION PRATIQUE

### 1. üåê Test NGINX + SSL/TLS
**√âtapes √† montrer :**
1. `curl http://localhost:80` ‚Üí Doit √©chouer
2. `curl -k https://localhost:443` ‚Üí Doit fonctionner
3. Ouvrir navigateur sur https://mjeannin.42.fr
4. Montrer le certificat SSL (m√™me si auto-sign√©)

**Points cl√©s √† expliquer :**
- Configuration dans /etc/nginx/ssl/
- TLS 1.2/1.3 uniquement
- Redirection HTTP ‚Üí HTTPS

### 2. üìù Test WordPress + PHP-FPM
**√âtapes √† montrer :**
1. Page d'accueil WordPress (pas d'installation)
2. Connexion admin avec "wpowner" (PAS admin!)
3. Cr√©ation d'un article de test
4. V√©rification de la publication

**Points cl√©s √† expliquer :**
- PHP-FPM sur port 9000
- Communication nginx ‚Üî wordpress via r√©seau Docker
- Volume partag√© pour fichiers WordPress

### 3. üóÑÔ∏è Test MariaDB
**√âtapes √† montrer :**
```bash
# Connexion √† la base (DOIT √âCHOUER sans mot de passe) :
docker exec -it mariadb mysql -u root

# Connexion avec utilisateur WordPress (DOIT FONCTIONNER) :
docker exec -it mariadb mysql -u wpuser -p
# Mot de passe depuis secrets

# V√©rifier la base :
USE wordpress_db;
SHOW TABLES;
SELECT * FROM wp_users;
```

**Points cl√©s √† expliquer :**
- Pas de connexion root sans mot de passe
- Utilisateur d√©di√© pour WordPress
- Base de donn√©es non vide

### 4. üíæ Test Persistance
**√âtapes √† montrer :**
```bash
# Arr√™ter les services :
docker-compose down

# Red√©marrer :
make

# V√©rifier que les donn√©es sont toujours l√† :
# - Articles WordPress cr√©√©s
# - Base de donn√©es intact
```

---

## üö® PI√àGES √Ä √âVITER

### ‚ùå Erreurs qui font √©chouer l'√©valuation

#### Configuration Docker
- **network: host** dans docker-compose.yml
- **links:** dans docker-compose.yml  
- **--link** dans Makefile ou scripts
- Images pre-built (pas FROM debian:bookworm)

#### Dockerfiles Interdits
- `tail -f`, `sleep infinity`, `while true`
- `nginx & bash` dans ENTRYPOINT
- Base images incorrectes (ubuntu, alpine r√©cent)

#### S√©curit√©
- Mots de passe en dur dans les fichiers
- Connexion root MySQL sans mot de passe
- Admin username contenant "admin"

#### Volumes et Persistance
- Volumes qui ne pointent pas vers /home/login/data/
- Donn√©es qui ne persistent pas apr√®s red√©marrage

---

## üó£Ô∏è QUESTIONS/R√âPONSES TYPES

### Q: "Pourquoi utiliser Docker au lieu de VMs ?"
**R:** Docker partage le kernel de l'h√¥te, donc plus l√©ger et rapide. Les VMs √©mulent un OS complet. Docker = isolation des processus, VMs = isolation compl√®te du syst√®me.

### Q: "Comment les containers communiquent ?"
**R:** Via le r√©seau Docker 'srcs_inception'. Chaque service a son nom de service comme hostname (nginx peut faire `curl wordpress:9000`).

### Q: "Pourquoi NGINX s√©par√© de WordPress ?"
**R:** S√©paration des responsabilit√©s : NGINX = reverse proxy + SSL, WordPress = application PHP. Plus s√©curis√© et modulaire.

### Q: "Comment fonctionnent les volumes ?"
**R:** Bind mounts entre `/home/mjeannin/data/` (h√¥te) et `/var/lib/mysql` (container). Donn√©es persistent m√™me si container supprim√©.

### Q: "Pourquoi PHP-FPM ?"
**R:** S√©pare le traitement PHP du serveur web. Plus performant que mod_php, permet de scaler ind√©pendamment.

---

## üéõÔ∏è COMMANDES UTILES PENDANT L'√âVALUATION

### Diagnostic rapide
```bash
# Status g√©n√©ral :
docker ps -a
docker volume ls
docker network ls

# Logs des services :
docker logs nginx
docker logs wordpress  
docker logs mariadb

# Acc√®s aux containers :
docker exec -it nginx bash
docker exec -it wordpress bash
docker exec -it mariadb bash

# Test connectivit√© :
docker exec -it nginx ping wordpress
docker exec -it wordpress ping mariadb
```

### V√©rification des configurations
```bash
# Configuration NGINX :
docker exec -it nginx cat /etc/nginx/nginx.conf

# Configuration PHP-FPM :
docker exec -it wordpress cat /etc/php/8.2/fpm/pool.d/www.conf

# Configuration MariaDB :
docker exec -it mariadb cat /etc/mysql/mariadb.conf.d/50-server.cnf
```

---

## üéÅ FONCTIONNALIT√âS BONUS

### Services Suppl√©mentaires Impl√©ment√©s
- **Redis** : Cache pour WordPress (performance)
- **FTP** : Gestion de fichiers via vsftpd
- **Adminer** : Interface web pour base de donn√©es
- **Portfolio** : Site statique personnel

### Points √† d√©montrer pour le bonus
1. Tous les services d√©marrent correctement
2. Redis cache fonctionne avec WordPress
3. FTP accessible pour upload de fichiers
4. Adminer permet gestion de la base
5. Site portfolio accessible

---

## ‚úÖ CHECKLIST FINALE AVANT √âVALUATION

### Pr√©paration personnelle
- [ ] Relire le subject PDF complet
- [ ] Tester tous les sc√©narios de cette prepa
- [ ] Pr√©parer des explications claires et simples
- [ ] V√©rifier que tous les services fonctionnent
- [ ] Tester la persistance apr√®s red√©marrage

### Test final
- [ ] `make clean && make` fonctionne parfaitement
- [ ] https://mjeannin.42.fr accessible uniquement
- [ ] WordPress fonctionnel avec admin "wpowner"
- [ ] Base de donn√©es accessible avec bon utilisateur
- [ ] Volumes persistent dans /home/mjeannin/data/
- [ ] R√©seau Docker custom op√©rationnel

### Documents √† conna√Ætre
- [ ] Architecture du projet (dessiner si n√©cessaire)
- [ ] docker-compose.yml expliqu√© ligne par ligne
- [ ] Dockerfiles expliqu√©s instruction par instruction
- [ ] Scripts d'initialisation compris

---

**üéØ OBJECTIF : D√©montrer une ma√Ætrise compl√®te de Docker, de l'architecture microservices et des bonnes pratiques de s√©curit√© !**